FROM alexmelekhin/open-place-recognition:base

# Install distro package as before.
ARG DISTRO_VERSION=1.9.0
RUN pip install distro==${DISTRO_VERSION}

# OPR_PATH is provided as a relative path within the build context.
ARG OPR_PATH=

# Copy the external OpenPlaceRecognition folder into /OpenPlaceRecognition inside the container.
COPY ${OPR_PATH} /OpenPlaceRecognition

# Set the locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8

# Setup sources
RUN apt-get install -y software-properties-common && add-apt-repository universe && apt-get update && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Install ROS2 and common tools
RUN apt-get update && apt-get upgrade -y && apt-get install -y \
    sudo \
    wget \
    git \
    nano \
    curl \
    ros-humble-desktop \
    ros-dev-tools \
    ros-humble-image-transport-plugins && \
    rosdep init && rosdep update

# Copy local ROS2 packages into the workspace source directory.
RUN mkdir -p /ros2_ws/src

# Run additional setup steps from the external OPR folder.
WORKDIR /OpenPlaceRecognition
RUN cd third_party/GeoTransformer && bash setup.sh
WORKDIR /
RUN rm -rf /OpenPlaceRecognition

# Add user and set password.
ENV USER=docker_opr_ros2
ARG UID=1000
ARG GID=1000
ARG PW=user
RUN useradd -m ${USER} --uid=${UID} && echo "${USER}:${PW}" | chpasswd && \
    usermod -aG sudo ${USER} && echo "${USER} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

WORKDIR /home/${USER}

# Create directories for mounting volumes.
RUN mkdir -p ros2_ws && chown -R ${UID}:${GID} /home/${USER}
RUN mkdir OpenPlaceRecognition && chown -R ${UID}:${GID} /home/${USER}

USER ${UID}:${GID}

# Source ROS2 on startup
RUN echo "source /opt/ros/humble/setup.bash" >> /home/${USER}/.bashrc

# Install pip requirements from the external folder.
COPY ${OPR_PATH}/requirements.txt requirements.txt
RUN pip install --user -r requirements.txt && rm requirements.txt
COPY ${OPR_PATH}/requirements-dev.txt requirements-dev.txt
RUN pip install --user -r requirements-dev.txt && rm requirements-dev.txt
COPY ${OPR_PATH}/requirements-notebook.txt requirements-notebook.txt
RUN pip install --user -r requirements-notebook.txt && rm requirements-notebook.txt

# Install Paddle packages via pip.
RUN pip install --user paddleocr paddlepaddle-gpu
